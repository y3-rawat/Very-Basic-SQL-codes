#What is a Database Table?
A table is a collection of related data entries, and it consists of columns and rows.

A column holds specific information about every record in the table.

A record (or row) is each individual entry that exists in a table.

***************************************************XXXXXXXXXXXXXXXXXXXXXXX***********************************************

What is a Relational Database?
A relational database defines database relationships in the form of tables. The tables are related to each other - based on data common to each.


*****************************************xxxxxxxxxxxxxxxxxxxx*******************************************************

What is SQL?
SQL is the standard language for dealing with Relational Databases.

SQL is used to insert, search, update, and delete database records.



****************************************XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX**********************************************

Some of The Most Important SQL Commands
SELECT - extracts data from a database
UPDATE - updates data in a database
DELETE - deletes data from a database
INSERT INTO - inserts new data into a database
CREATE DATABASE - creates a new database
ALTER DATABASE - modifies a database
CREATE TABLE - creates a new table
ALTER TABLE - modifies a table
DROP TABLE - deletes a table
CREATE INDEX - creates an index (search key)
DROP INDEX - deletes an index

****************************************XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX**********************************************
#The CREATE DATABASE statement is used to create a new SQL database.

#Syntax:- create 
CREATE DATABASE databasename;

example:- 
CREATE DATABASE cybrom


#Syntax:- show
show databases;

#example:-
show databases

#Syntax:- to use 
use databasename;

example:-
use cybrom

The DROP DATABASE statement is used to drop an existing SQL database.

Syntax
DROP DATABASE databasename;

drop cybrom;




****************************************XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX**********************************************

The CREATE TABLE statement is used to create a new table in a database.

Syntax:-
CREATE TABLE table_name (column1 datatype,column2 datatype,column3 datatype);

example:-
CREATE TABLE Persons (PersonID int,LastName varchar(255),FirstName varchar(255),Address varchar(255),City varchar(255));
-----------------------------------------------------------------------------------------------
#TO CREATE COPY OF THE TABLE WITH THE NEW NAME
create table newtablename as select * from old table name;

example:-
create table persons_new as select * from persons;
-----------------------------------------------------------------------------------------
#TO COPY SPECIFIC TABLE 

create table newtablename as select columname1,columname2,..... from old table name;

example:-
create table persons_new as select personid,adress from persons;
------------------------------------------------------------------------------------------
#to copy only structure of table 

create table newtablename like oldtable;

example:-
create e_persons like persons;
------------------------------------------------------------------------------------------


****************************************************************************************************************

#TO DELETE THE TABLE ":


syntax:-drop tbale cybrom;

Example:-
DROP TABLE Shippers;












MySQL Constraints
SQL constraints are used to specify rules for the data in a table.

Constraints are used to limit the type of data that can go into a table. This ensures the accuracy and reliability of the data in the table. If there is any violation between the constraint and the data action, the action is aborted.

Constraints can be column level or table level. Column level constraints apply to a column, and table level constraints apply to the whole table.

The following constraints are commonly used in SQL:

NOT NULL - Ensures that a column cannot have a NULL value
UNIQUE - Ensures that all values in a column are different
PRIMARY KEY - A combination of a NOT NULL and UNIQUE. Uniquely identifies each row in a table
FOREIGN KEY - Prevents actions that would destroy links between tables
CHECK - Ensures that the values in a column satisfies a specific condition
DEFAULT - Sets a default value for a column if no value is specified

*******************************************************************************************************
#NOT NULL
The NOT NULL constraint enforces a column to NOT accept NULL values.

#TO CREATE
CREATE TABLE student(ID int NOT NULL ,Name varchar(255) NOT NULL,l_Name varchar(255) NOT NULL,Age int);



******************************************************************************************************

#UNIQUE
The UNIQUE constraint ensures that all values in a column are different

# TO CREATE 

CREATE TABLE Persons (ID int unique ,Name varchar(255) NOT NULL,l_Name varchar(255),Age int);

#UPDATE COLUMN

ALTER TABLE Persons ADD UNIQUE (ID);

*******************************************************************************************************

#PRIMARY KEY
The PRIMARY KEY constraint uniquely identifies each record in a table.

# TO CREATE 

CREATE TABLE Persons (ID int PRIMARY KEY,LastName varchar(255) NOT NULL,FirstName varchar(255),Age int,);

#TO ADD

ALTER TABLE Persons ADD PRIMARY KEY (ID);


****************************************************************************************************

The CHECK constraint is used to limit the value range that can be placed in a column.

#TO CREATE

CREATE TABLE Persons (ID int NOT NULL,LastName varchar(255) NOT NULL,FirstName varchar(255),Age int,CHECK (Age>=18);

#TO ADD

ALTER TABLE Persons ADD CHECK (Age>=18);

******************************************************************************************************

#DEFAULT

The DEFAULT constraint is used to set a default value for a column.

#TO CREATE 

CREATE TABLE Persons (ID int NOT NULL, Name varchar(255) NOT NULL,L_Name varchar(255),Age int,City varchar(255) DEFAULT 'Sandnes');

#TO ADD

CREATE TABLE Persons (Personid int PRIMARY KEY AUTO_INCREMENT,LastName varchar(255) NOT NULL,FirstName varchar(255),Age int);

************************************************************************************************************

MySQL Date Data Types
MySQL comes with the following data types for storing a date or a date/time value in the database:

DATE - format YYYY-MM-DD
DATETIME - format: YYYY-MM-DD HH:MI:SS
YEAR - format YYYY or YY` 


****************************************************************************************************
like operator 


wildcard

 'a%'	Finds any values that start with "a"
 '%a'	Finds any values that end with "a"
 '%or%'Finds any values that have "or" in any position
 '_r%'	Finds any values that have "r" in the second position
 'a_%'	Finds any values that start with "a" and are at least 2 characters in length
 'a__%'	Finds any values that start with "a" and are at least 3 characters in length
 'a%o'	Finds any values that start with "a" and ends with "o"








